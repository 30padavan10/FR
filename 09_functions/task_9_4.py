# -*- coding: utf-8 -*-
'''
Задание 9.4

Создать функцию, которая обрабатывает конфигурационный файл коммутатора
и возвращает словарь:
* Все команды верхнего уровня (глобального режима конфигурации), будут ключами.
* Если у команды верхнего уровня есть подкоманды, они должны быть в значении у соответствующего ключа, в виде списка (пробелы в начале строки можно оставлять).
* Если у команды верхнего уровня нет подкоманд, то значение будет пустым списком

Функция ожидает в качестве аргумента имя конфигурационного файла.

Проверить работу функции на примере файла config_sw1.txt

При обработке конфигурационного файла, надо игнорировать строки, которые начинаются с '!',
а также строки в которых содержатся слова из списка ignore.

Для проверки надо ли игнорировать строку, использовать функцию ignore_command.


Ограничение: Все задания надо выполнять используя только пройденные темы.
'''

ignore = ['duplex', 'alias', 'Current configuration']


def ignore_command(command, ignore):
    '''
    Функция проверяет содержится ли в команде слово из списка ignore.

    command - строка. Команда, которую надо проверить
    ignore - список. Список слов

    Возвращает
    * True, если в команде содержится слово из списка ignore
    * False - если нет
    '''
    return any(word in command for word in ignore)


def nest_command(file):
    ''' суть функции в том, что она проходится отдельно по каждой строке по очереди
в случае команды первого уровня: 1. добавляется эта команда в словарь как ключ и создается
пустой список. 2. Эта строка записывается в новую переменную key.
При появлении команды второго уровня, чтобы попать в уже созданный список, в качестве ключа
используется переменная созданная из комманды первого уровня. Логика не нарушается т.к. при
появлении другой вложенной команды переменная key уже обновится на нужную вышестоящую команду. 
''' 
    result = {}
    with open(file) as src:
        for line in src:
            if line.startswith('!'):
                pass
            elif line == '\n':                  #убираем пустые строки
                pass
            elif ignore_command(line, ignore):  #используем функцию ignore_command
                pass
            elif line.startswith(' '):
                result[key].append(line.strip())
            else:
                key = line.strip()
                result.update({line.strip():[]})
    print(result)
    return result


nest_command('config_sw1.txt')
